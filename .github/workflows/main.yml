name: Monitor Docker Hub for New Tags

permissions:
  contents: write

on:
  workflow_dispatch: # Allow manual trigger
  schedule:
    - cron: '0 */6 * * *' # Run every 6 hours

jobs:
  # Check Docker Hub for lattest version of Netbox
  check_docker_hub:
    runs-on: ubuntu-latest
    outputs:
      latest_tag: ${{ steps.fetch_tags.outputs.latest_tag}}
      update_needed: ${{ steps.check_update.outputs.update_needed}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch latest tags from Docker Hub
        id: fetch_tags
        run: |
          REPO="netboxcommunity/netbox"
          TAGS=$(curl -s "https://hub.docker.com/v2/repositories/$REPO/tags/" | jq -r '.results[].name' | grep -E '^v[0-9]+')
          LATEST_TAG=$(echo "$TAGS" | sort -Vr | head -n 1)
          echo "Latest tag: $LATEST_TAG"
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Check for updates
        id: check_update
        run: |
          DIRECTORY="Docker"
          FILE="$DIRECTORY/latest_version.txt"
          
          # Ensure the directory exists
          if [[ ! -d $DIRECTORY ]]; then
            echo "Error: Directory $DIRECTORY does not exist."
            exit 1
          fi
          
          if [[ -f $FILE ]]; then
            CURRENT_TAG=$(cat $FILE)
          else
            CURRENT_TAG=""
          fi
      
          echo "Current tag in file: $CURRENT_TAG"
          echo "Latest fetched tag: ${{ steps.fetch_tags.outputs.latest_tag }}"
      
          if [[ "$CURRENT_TAG" != "${{ steps.fetch_tags.outputs.latest_tag }}" ]]; then
            echo "New version detected: ${{ steps.fetch_tags.outputs.latest_tag }}"
            echo "update_needed=true" >> $GITHUB_OUTPUT
          else
            echo "No new version found."
            echo "update_needed=false" >> $GITHUB_OUTPUT
          fi

#  commit_git_changes:
#    runs-on: ubuntu-latest
#    needs: check_docker_hub
#    if: ${{needs.check_docker_hub.outputs.update_needed == 'true'}}
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Create file with newest version
#        id: create_file_with_latest_tag
#        run: |
#          DIRECTORY="Docker"
#          FILE="$DIRECTORY/latest_version.txt"
#
#          echo "${{ needs.check_docker_hub.outputs.latest_tag }}" > $FILE
#
#      - name: Commit and Push Changes
#        uses: EndBug/add-and-commit@v9
#        id: commit_changes_with_latest_tag
#        with:
#          add: 'Docker/latest_version.txt'
#          message: "New version of Netbox Docker image has been uploaded with tag: ${{ needs.check_docker_hub.outputs.latest_tag }}"
#
#      - name: Notify about the new version
#        run: |
#          echo "New version found: ${{ needs.check_docker_hub.outputs.latest_tag }}"
#
#  build_new_docker_image:
#    runs-on: ubuntu-latest
#    needs:
#      - check_docker_hub
#      - commit_git_changes
#
#    steps:
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#
#      - name: Get timestamp
#        id: tag_timestamp
#        run: |
#          echo "timestamp=$(date +'%d%m%Y-%H%M')" >> $GITHUB_OUTPUT
#          ls -lh
#
#      - name: Build and push
#        uses: docker/build-push-action@v6
#        with:
#          context: "{{defaultContext}}:Docker/netbox/"
#          sbom: true
#          provenance: mode=max
#          push: false
#          tags: ${{ secrets.DOCKERHUB_USERNAME }}/nettools:netbox-${{ needs.check_docker_hub.outputs.latest_tag }}-build.${{ steps.tag_timestamp.outputs.timestamp }}

  send_notification_email:
    runs-on: ubuntu-latest
    needs:
      - check_docker_hub
#      - commit_git_changes
#      - build_new_docker_image

    steps:
      - name: Send Email after successfull Docker image Build
        uses: cinotify/github-action@main
        with:
          to: '${{secrets.MAIL_TO}}'
          subject: 'Github Actions - New Netbox Image - ${{ secrets.DOCKERHUB_USERNAME }}/nettools:netbox-${{ needs.check_docker_hub.outputs.latest_tag }}-build.${{ steps.tag_timestamp.outputs.timestamp }}'
          body: '<em>New Nexbox images has been build and pushed to Docker HUB.
            The lattest version of Netbox is: ${{ needs.check_docker_hub.outputs.latest_tag }}
            The Docker image tag is: ${{ secrets.DOCKERHUB_USERNAME }}/nettools:netbox-${{ needs.check_docker_hub.outputs.latest_tag }}-build.${{ steps.tag_timestamp.outputs.timestamp }}</em>'
          type: 'text/html'

