name: Monitor Docker Hub for New Tags

on:
  workflow_dispatch: # Allow manual trigger
  schedule:
    - cron: '0 */6 * * *' # Run every 6 hours

jobs:
  check_docker_hub:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch latest tags from Docker Hub
        id: fetch_tags
        run: |
          REPO="netboxcommunity/netbox"
          TAGS=$(curl -s "https://hub.docker.com/v2/repositories/$REPO/tags/" | jq -r '.results[].name' | grep -E '^v[0-9]+')
          LATEST_TAG=$(echo "$TAGS" | sort -Vr | head -n 1)
          echo "Latest tag: $LATEST_TAG"
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Check for updates
        id: check_update
        run: |
          DIRECTORY="Docker/netbox"
          FILE="$DIRECTORY/latest_digest.txt"
          
          # Ensure the directory exists
          if [[ ! -d $DIRECTORY ]]; then
            echo "Error: Directory $DIRECTORY does not exist."
            exit 1
          fi
          
          if [[ -f $FILE ]]; then
            CURRENT_TAG=$(cat $FILE)
          else
            CURRENT_TAG=""
          fi
      
          echo "Current tag in file: $CURRENT_TAG"
          echo "Latest fetched tag: ${{ steps.fetch_tags.outputs.latest_tag }}"
      
          if [[ "$CURRENT_TAG" != "${{ steps.fetch_tags.outputs.latest_tag }}" ]]; then
            echo "New version detected: ${{ steps.fetch_tags.outputs.latest_tag }}"
            echo "${{ steps.fetch_tags.outputs.latest_tag }}" > $FILE
            echo "update_needed=true" >> $GITHUB_OUTPUT
          else
            echo "No new version found."
            echo "update_needed=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit and Push Changes
        if: steps.check_update.outputs.update_needed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add Docker/netbox/latest_digest.txt
          git commit -m "Update latest_digest.txt with new tag ${{ steps.fetch_tags.outputs.latest_tag }}"
          git push

      - name: Notify about the new version
        if: steps.check_update.outputs.update_needed == 'true'
        run: |
          echo "New version found: ${{ steps.fetch_tags.outputs.latest_tag }}"
